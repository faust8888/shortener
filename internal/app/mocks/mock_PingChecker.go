// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/faust8888/shortener/internal/app/handler (interfaces: PingChecker)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPingChecker is a mock of PingChecker interface.
type MockPingChecker struct {
	ctrl     *gomock.Controller
	recorder *MockPingCheckerMockRecorder
}

// MockPingCheckerMockRecorder is the mock recorder for MockPingChecker.
type MockPingCheckerMockRecorder struct {
	mock *MockPingChecker
}

// NewMockPingChecker creates a new mock instance.
func NewMockPingChecker(ctrl *gomock.Controller) *MockPingChecker {
	mock := &MockPingChecker{ctrl: ctrl}
	mock.recorder = &MockPingCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPingChecker) EXPECT() *MockPingCheckerMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockPingChecker) Ping() (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingDatabase")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Ping indicates an expected call of Ping.
func (mr *MockPingCheckerMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingDatabase", reflect.TypeOf((*MockPingChecker)(nil).Ping))
}
